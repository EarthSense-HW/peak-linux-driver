#!/usr/bin/make -f

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

### KERNEL SETUP
# Name of the source package
psource:=peak-linux-driver-source
# The short upstream name, used for the module source directory
sname:=peak-linux-driver
# prefix of the target package name
PACKAGE=peak-linux-driver-modules
# modifieable for experiments or debugging m-a
MA_DIR ?= /usr/share/modass
# load generic variable handling
-include $(MA_DIR)/include/generic.make
# load default rules, including kdist, kdist_image, ...
-include $(MA_DIR)/include/common-rules.make
# module assistant calculates all needed things for us and sets
# following variables:
# KSRC (kernel source directory), KVERS (kernel version string), KDREV
# (revision of the Debian kernel-image package), CC (the correct
# compiler), VERSION (the final package version string), PKGNAME (full
# package name with KVERS included), DEB_DESTDIR (path to store DEBs)

configure: configure-stamp
configure-stamp:
	dh_testdir
	touch configure-stamp

build-arch: configure-stamp  build-arch-stamp
build-arch-stamp:
	dh_testdir
	$(MAKE) -C lib
	$(MAKE) -C test
	touch $@

build-indep:  configure-stamp build-indep-stamp
build-indep-stamp:
	dh_testdir
	touch $@

build: build-arch build-indep

clean:
	dh_testdir
	-rm -f build-arch-stamp build-indep-stamp configure-stamp
	$(MAKE) clean KERNEL_DIR=$(KSRC) KVERS=$(KVERS)
	-rm lib/libpcan.so
	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	# Create the directories to install the source into
	dh_installdirs -p$(psource)  usr/src/modules/$(sname)/debian

	# Copy only the driver source to the proper location
	cp -a driver/*  debian/$(psource)/usr/src/modules/$(sname)
	# Copy the needed debian/ pieces to the proper location
	cp debian/control debian/*.modules.in* \
		debian/$(psource)/usr/src/modules/$(sname)/debian/
	cp debian/rules debian/changelog debian/copyright debian/compat \
		debian/$(psource)/usr/src/modules/$(sname)/debian/
	cd debian/$(psource)/usr/src && tar -c modules | gzip -9 > $(sname).tar.gz && rm -rf modules

	dh_install
	dh_link -plibpcan0 usr/lib/libpcan.so.0.6 usr/lib/libpcan.so.0
	
#	$(MAKE) -C lib DESTDIR=$(CURDIR)/debian/tmp install
#	$(MAKE) -C test DESTDIR=$(CURDIR)/debian/tmp install
	# modprobe scripts
#	$(MAKE) -C driver DESTDIR=$(CURDIR)/debian/tmp install-modprobe


# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs  -i
	dh_installdocs -i
	dh_installexamples -i
#	dh_install -i
	dh_installman -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_installdeb -i
	dh_shlibdeps -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -s
	dh_testroot -s
	dh_installdocs -s
	dh_installexamples -s
	dh_installmenu -s
	dh_installcron -s
#	dh_installman -s
	dh_installinfo -s
	dh_installchangelogs  -s
	dh_strip -s
	dh_link -s
	dh_compress -s
	dh_fixperms -s
	dh_makeshlibs -s
	dh_installdeb -s
	dh_shlibdeps -s
	dh_gencontrol -s
	dh_md5sums -s
	dh_builddeb -s

binary: binary-indep binary-arch

# The kernel module targets called by module-assistant
 
# The kdist_configure target is called by make-kpkg modules_config and
# by kdist* rules by dependency. It should configure the module so it is
# ready for compilation (mostly useful for calling configure).
# prep-deb-files from module-assistant creates the neccessary debian/ files 
kdist_config: prep-deb-files
kdist_configure: kdist_config
  
# the kdist_clean target is called by make-kpkg modules_clean and from
# kdist* rules. It is responsible for cleaning up any changes that have
# been made by the other kdist_commands (except for the .deb files created)
kdist_clean:
	-rm -f build-stamp configure-stamp
	test -f Makefile && \
	$(ROOT_CMD) $(MAKE) KERNEL_DIR=$(KSRC) KVERS=$(KVERS) clean || true
	-dh_clean

# the binary-modules rule is invoked by module-assistant while processing the
# kdist* targets. It is called by module-assistant or make-kpkg and *not*
# during a normal build
binary-modules: kdist_config
	export DH_OPTIONS='-p$(PKGNAME)'
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs lib/modules/$(KVERS)/misc

	# Build the module with NETDEV support
	$(ROOT_CMD) $(MAKE) KERNEL_DIR=$(KSRC) KVERS=$(KVERS) NET=NETDEV_SUPPORT

	# Install the module
	install -m 0644 pcan.ko debian/$(PKGNAME)/lib/modules/$(KVERS)/misc ; \
	
	dh_installmodules
	dh_installdocs
	dh_installchangelogs
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_gencontrol -- -v$(VERSION)
	dh_md5sums
	dh_builddeb --destdir=$(DEB_DESTDIR)

.PHONY: build clean binary-indep binary-arch binary install configure binary-modules kdist kdist_config kdist_configure kdist_image kdist_clean
